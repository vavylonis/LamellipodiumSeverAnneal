# Read in and plot Fibroblast leading edge 
# simulation data to compare to Vinzenz et al. 

import csv
import matplotlib.pyplot as plt
import numpy as np 

# barbed end, pointed end, filament number 

BEdist = []
BEnum = []
BEdist2 = []
BEnum2 = []
'''
BEdist3 = []
BEnum3 = []
BEdist5 = []
BEnum5 = []
BEdist6 = []
BEnum6 = []
BEdist7 = []
BEnum7 = []
'''

EndDist = [0.125,0.375,0.625,0.875]

#data from Vinzenz et al. 
VBEnum = [586.257,173.513,86.5943,69.2049]
#number density is divided by bin size of 0.25 um 
#VBEnum = [2345,694,346.37,276.81]


#Get the barbed and pointed end data 
with open('EndS_0_UnifS_5E-5_Ann_60_Lcrit_80\\BrBE.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist.append(float(row[1])) #distance from LE
            BE = float(row[2])
            BEnum.append(BE) #Barbed ends
 
#Get the barbed and pointed end data for data set 2
with open('EndS_1E-3_UnifS_5E-6_Ann_60_Lcrit_150\\BrBE.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist2.append(float(row[1])) #distance from LE
            BE2 = float(row[2])
            BEnum2.append(BE2) #Barbed ends divieded by bin size for number density
'''            
#Get the barbed and pointed end data for data set 3
with open('FibroCap\BrBE_Cap0pt6.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist3.append(float(row[1])) #distance from LE
            BE3 = float(row[2])
            BEnum3.append(BE3) #Barbed ends            

#Get the barbed and pointed end data for data set 5 (in folder 4) for de novo 
with open('FibroDen\BrBE_Den10.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist5.append(float(row[1])) #distance from LE
            BE5 = float(row[2])
            BEnum5.append(BE5) #Barbed ends            
            
with open('FibroDen\BrBE_Den20.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist6.append(float(row[1])) #distance from LE
            BE6 = float(row[2])
            BEnum6.append(BE6) #Barbed ends            

with open('FibroDen\BrBE_Den30.csv', 'r') as file:
    File = csv.reader(file)

    for row in File:
        if row[0] == '2':
            BEdist7.append(float(row[1])) #distance from LE
            BE7 = float(row[2])
            BEnum7.append(BE7) #Barbed ends            
'''

 
BESort = [x for _, x in sorted(zip(BEdist, BEnum))]
BEdist.sort()

BESort2 = [x for _, x in sorted(zip(BEdist2, BEnum2))]
BEdist2.sort()
'''
BESort3 = [x for _, x in sorted(zip(BEdist3, BEnum3))]
BEdist3.sort()

BESort5 = [x for _, x in sorted(zip(BEdist5, BEnum5))]
BEdist5.sort()

BESort6 = [x for _, x in sorted(zip(BEdist6, BEnum6))]
BEdist6.sort()

BESort7 = [x for _, x in sorted(zip(BEdist7, BEnum7))]
BEdist7.sort()
'''

BEDen = []
BEDen2 = []

interval = BEdist[1]-BEdist[0]
for i in range(0,len(BEdist),1):
    BEdist[i] = BEdist[i] - interval/2   
    BEDen.append(BESort[i]/0.25)  #divide bin size out for number density
for i in range(0,len(BEdist2),1):
    BEdist2[i] = BEdist2[i] - interval/2    
    BEDen2.append(BESort2[i]/0.25)  #divide bin size out for number density


    
'''
for i in range(0,len(BEdist3),1):
    BEdist3[i] = BEdist3[i] - interval/2     
for i in range(0,len(BEdist5),1):
    BEdist5[i] = BEdist5[i] - interval/2    
for i in range(0,len(BEdist6),1):
    BEdist6[i] = BEdist6[i] - interval/2    
for i in range(0,len(BEdist7),1):
    BEdist7[i] = BEdist7[i] - interval/2    
'''
'''    
#barbed end plot 
plt.figure(1)
plt.rc('xtick', labelsize = 24)
plt.rc('ytick', labelsize = 24)
plt.subplots_adjust(left=None, bottom=0.15, right=None, top=None, wspace=None, hspace=None)
BE = plt.subplot(1,1,1)
BE4, = plt.plot(EndDist, VBEnum, color = "green", linewidth = 5) # Vinzenz et al. data 
BE1, = plt.plot(BEdist[0:4], BESort[0:4], color = "black", linewidth = 5) # BE for data 1
BE2, = plt.plot(BEdist2[0:4], BESort2[0:4], color = "red", linewidth = 5) # BE for data 2
plt.ylim(0,625)
plt.xlim(0,1)
BE.set_title('Barbed End Number', fontsize = 40)
BE.set_xlabel('Distance from Leading edge (\u03BCm)', fontsize = 30)  
BE.set_ylabel('Number', fontsize = 30)          
BE1.set_label('$k_{unif}^{sev}$ = 0.05x$10^{-3}$/sub/s, $k_{end}^{sev}$ = 0')
BE2.set_label('$k_{unif}^{sev}$ = 0.005x$10^{-3}$/sub/s, $k_{end}^{sev}$ = 1x$10^{-3}$/sub/s')
BE4.set_label('Vinzenz et al.')
plt.legend(fontsize = 20)
plt.xticks(np.arange(0,1.25,0.25))
#plt.xticks([1,2,3,4],['0.25','0.50','0.75','1.00'])
plt.show()  
'''
BEBinC = []
BEBin2C = []
for i in range(0,len(BESort), 1):
    BEBinC.append(BESort[i]/(0.25*0.2*602.2))
for i in range(0,len(BESort2), 1):
    BEBin2C.append(BESort2[i]/(0.25*0.2*602.2))

ymax = 1200

#branch plot 
#plt.figure(2)
fig = plt.figure(figsize =(11, 9))  
fig.set_size_inches(10, 8) 
plt.subplots_adjust(left=0.18, bottom=0.15, right=0.9, top=None, wspace=None, hspace=None)
plt.rc('xtick', labelsize = 24)
plt.rc('ytick', labelsize = 24)
BE = plt.subplot(1,1,1)
#br4, = plt.plot(VbrDist, VbrNum, color = "green", linewidth = 5) # Vinzenz et al. data 
BE4, = plt.plot(EndDist, VBEnum, '->g', linewidth = 5, markersize = 20) # Vinzenz et al. data 
BE1, = plt.plot(BEdist, BEDen,'-ok', markersize = 15, linewidth = 5, markevery = 4) # Branches for data 1
BE2, = plt.plot(BEdist2, BEDen2, '-sr', markersize = 15, linewidth = 5, markevery = 4) # Branhes for data 2
plt.ylim(0,ymax)
plt.xlim(0,10.2)
BE.set_title('Barbed Ends', fontsize = 40)
BE.set_xlabel('Distance from leading edge (\u03BCm)', fontsize = 28)  
BE.set_ylabel('Number density (\u03BCm$^{-2}$)', fontsize = 30)          
#BE1.set_label('$k_{unif}^{sev}$ = 0.05x$10^{-3}$/sub/s, $k_{end}^{sev}$ = 0')
#BE2.set_label('$k_{unif}^{sev}$ = 0.005x$10^{-3}$/sub/s, $k_{end}^{sev}$ = 1x$10^{-3}$/sub/s')
BE4.set_label('Vinzenz et al.')
BE1.set_label('Uniform severing')
BE2.set_label('Enhanced end severing')
plt.legend(fontsize = 24)
#plt.xticks(np.arange(0,1.25,0.25))
#plt.xticks([1,2,3,4],['0.25','0.50','0.75','1.00'])
# add 2nd axis
ax2 = plt.twinx()  
ax2.set_ylabel('Barbed end concentration (\u03BCM)', fontsize = 28)  
ax2.plot(BEdist, BEBinC, color = "black", linewidth = 0.0) # BE for data 1
ax2.plot(BEdist2, BEBin2C, color = "red", linewidth = 0.0) # BE for data 2
ax2.plot(EndDist, [19.47,5.76,2.87,2.29], color = "green", linewidth = 0.0) # Vinzenz et al data in uM to set the 2nd axis
plt.ylim(0,ymax/(0.25*602.2))
plt.xticks([0,1,2,3,4,5,6,7,8,9,10], ['0','1','2','3','4','5','6','7','8','9','10']) 
plt.show()  


